@model IEnumerable<MusicCollaboration.Models.Collaboration>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Collaborations</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Collaborations" asp-action="Index" method="get">
    <p>
        Title : <input type="text" name="searchString" class="form-control"/>
        @Html.DropDownList("searchGenre",
       new SelectList(Enum.GetValues(typeof(CollaborationGenre))),
       "Select Genre",
       new { @class = "form-control"})

        <input type="submit" value="Filter" class="btn btn-success" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Bpm)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SongKey)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <a asp-action="Details" asp-route-id="@item.ID">
                @Html.DisplayFor(modelItem => item.Title)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Bpm)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SongKey)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @if ((await AuthorizationService.AuthorizeAsync(
                     User, item,
                     ProjectOperations.Update)).Succeeded)
                 {
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> 
                    <text> |</text>
                  }
                <a asp-action="Details" asp-route-id="@item.ID">Details</a> 

                @if ((await AuthorizationService.AuthorizeAsync(
                   User,item,
                   ProjectOperations.Delete)).Succeeded)
                {
                    <text> | </text>
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>

                }
            </td>
        </tr>
}
    </tbody>
</table>
